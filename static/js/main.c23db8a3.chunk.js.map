{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/pages/About.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","res","this","data","value","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","a","delete","name","email","phone","className","onClick","style","cursor","bind","float","color","to","marginRight","Contacts","key","Header","branding","defaultProps","About","TextInputGroup","label","placeholder","error","onChange","htmlFor","classnames","AddContact","errors","onSubmit","e","preventDefault","newContact","post","history","push","target","EditContact","match","params","updateContact","put","NotFound","Test","username","address","company","fetch","then","response","json","street","suite","city","zipcode","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c23db8a3.chunk.js","sourcesContent":["import React, {Component} from 'react'\r\nimport axios from 'axios'\r\n\r\nconst Context = React.createContext();\r\nconst reducer = (state, action) => {\r\n  switch(action.type){\r\n    case 'DELETE_CONTACT':return{\r\n      ...state, \r\n      contacts: state.contacts.filter(contact => contact.id !== action.payload)\r\n    };\r\n    case 'ADD_CONTACT':return{\r\n      ...state, \r\n      contacts:[action.payload, \r\n        ...state.contacts]\r\n    };\r\n    case 'UPDATE_CONTACT':return{\r\n      ...state, \r\n      contacts:state.contacts.map(contact => contact.id === action.payload.id ? (contact = action.payload) : contact )\r\n    };\r\n\r\n    default: return state;\r\n  }\r\n}\r\n\r\nexport class Provider extends Component{\r\n  state ={\r\n    contacts:[],\r\n    dispatch: action => this.setState(state => reducer(state, action))\r\n  }\r\n  \r\n  async componentDidMount() {\r\n    const res = await axios.get('https://jsonplaceholder.typicode.com/users');\r\n\r\n    this.setState({contacts: res.data});\r\n  }\r\n  \r\n  \r\n  render(){\r\n    return (\r\n        <Context.Provider value={this.state}>\r\n          {this.props.children}\r\n        </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport const Consumer = Context.Consumer;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport {Consumer} from '../../context';\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nclass Contact extends React.Component {\r\n  state={\r\n    showContactInfo : false\r\n  }\r\n\r\n  onDeleteClick = async (id, dispatch) => {\r\n    await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n    \r\n    dispatch({ type:'DELETE_CONTACT', payload: id})\r\n  };\r\n\r\n\r\n  render(){\r\n  const {id, name, email, phone} = this.props.contact;\r\n  const{ showContactInfo } = this.state;\r\n\r\n  return (  \r\n      <Consumer>\r\n        {value => {\r\n          const{ dispatch} = value\r\n            return (\r\n              <div className=\"card card-body mb-3\">\r\n              <h4>{name} <i onClick={() => this.setState({showContactInfo:!showContactInfo})} className=\"fa fa-sort-down\" style={{ cursor : 'pointer'}}></i>\r\n                <i onClick={this.onDeleteClick.bind(this, id, dispatch)} className=\"fa fa-times\" style={{float: 'right', cursor: 'pointer', color:'red'}}></i>\r\n                <Link to={`/contact/edit/${id}`}><i  className=\"fa fa-edit\" style={{float: 'right', cursor: 'pointer', color:'black', marginRight:'1rem'}}></i></Link>\r\n               \r\n              </h4>\r\n              \r\n              {\r\n                showContactInfo ? \r\n                  <ul className=\"list-group\">\r\n                    <li className=\"list-group-item\">Email: {email}</li>\r\n                    <li className=\"list-group-item\">Phone: {phone}</li>\r\n                  </ul>\r\n              : null\r\n              }\r\n\r\n            </div>\r\n            )}}\r\n      </Consumer>\r\n  );  \r\n }\r\n}\r\n\r\n\r\nContact.propTypes ={\r\n  contact:PropTypes.object.isRequired,\r\n\r\n}\r\n\r\n\r\nexport default Contact;\r\n","import React, { Component, Fragment } from 'react'\r\nimport Contact from './Contact'\r\nimport { Consumer } from '../../context';\r\n\r\nclass Contacts extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n          { value => {\r\n            return(\r\n              <Fragment>\r\n                <h1 className=\"display-4 mb-2\"><span className=\"text-danger\">Contact</span> List</h1>\r\n              { value.contacts.map(contact => (\r\n              \r\n              <Contact \r\n                key={contact.id} \r\n                contact={contact} />\r\n              ))}\r\n\r\n            </Fragment>\r\n            );\r\n          }}    \r\n      </Consumer>\r\n    )\r\n\r\n  }\r\n}\r\n\r\nexport default Contacts","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n const Header = (props) => {\r\n  const {branding } = props;\r\n  return (\r\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n           <div className=\"container\">\r\n             <Link to=\"/\" className=\"navbar-brand\">{branding}</Link>\r\n             <div>\r\n               <ul className=\"navbar-nav mr-auto\">\r\n                 <li className=\"nav-item\">\r\n                   <Link to =\"/\" className=\"nav-link\">\r\n                     <i className=\"fa fa-home\"></i> Home</Link>\r\n                 </li>\r\n                 <li className=\"nav-item\">\r\n                   <Link to =\"/contact/add\" className=\"nav-link\"><i className=\"fa fa-plus\"></i> Add</Link>\r\n                 </li>\r\n                 <li className=\"nav-item\">\r\n                   <Link to =\"/about\" className=\"nav-link\"><i className=\"fa fa-question\"></i> About</Link>\r\n                 </li>\r\n               </ul>\r\n               </div>\r\n          </div>\r\n      </nav>\r\n     \r\n  )\r\n}\r\n\r\nHeader.defaultProps ={\r\n  branding:'My App'\r\n};\r\n\r\nHeader.propTypes = {\r\n  branding : PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react'\r\n\r\nconst About = () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">About Contact Manger</h1>\r\n      <p className=\"lead\">Simple app to manage contacts</p>\r\n      <p className=\"text-secondary\">Version 1.0.0</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport classnames from'classnames';\r\n\r\nconst TextInputGroup = ({ label, name, value, placeholder, type, error,onChange }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        type={type}\r\n        name={name}\r\n        className={classnames('form-control form-control-lg', {'is-invalid': error})}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {error &&  <div className=\"invalid-feedback\">{error}</div>}\r\n     \r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nTextInputGroup.propTypes = {\r\n  label:PropTypes.string.isRequired,\r\n  name:PropTypes.string.isRequired,\r\n  value:PropTypes.string.isRequired,\r\n  placeholder:PropTypes.string.isRequired,\r\n  type:PropTypes.string.isRequired,\r\n\r\n  onChange:PropTypes.func.isRequired,\r\n  error:PropTypes.string\r\n}\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: 'text'\r\n}\r\nexport default TextInputGroup","import React, { Component } from 'react'\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n     name:'',\r\n     email:'',\r\n     phone:'',\r\n     errors:{}\r\n  }\r\n\r\n\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n\r\n    const{ name, email, phone} = this.state;\r\n\r\n    // Check for Errors   \r\n    if(name === '') {\r\n      this.setState({ errors:{ name: 'Name is required'\r\n        }\r\n      });\r\n      return;\r\n    }\r\n\r\n    if(email === ''){\r\n      this.setState({\r\n        errors:{\r\n          phone: 'Email is required'\r\n        }\r\n      });\r\n      return;\r\n    }\r\n\r\n    if(phone === ''){\r\n      this.setState({\r\n        errors:{\r\n          phone: 'Phone is required'\r\n        }\r\n      });\r\n      return;\r\n    }\r\n\r\n    const newContact = {\r\n      name, \r\n      email, \r\n      phone\r\n    };\r\n    \r\n    const res = await axios.post('https://jsonplaceholder.typicode.com/users', newContact);\r\n\r\n    dispatch({type: 'ADD_CONTACT', payload: res.data});\r\n\r\n   \r\n  \r\n    // Clear State\r\n    this.setState({\r\n      name:'',\r\n      email:'',\r\n      phone:'',\r\n      errors:{}\r\n    });\r\n\r\n    // Redirect after submiting form\r\n    this.props.history.push('/');\r\n  }\r\n\r\n  onChange = e =>{\r\n    this.setState({\r\n      [e.target.name] : e.target.value,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const{ name, email, phone, errors} = this.state;\r\n\r\n    return(\r\n      <Consumer>\r\n        {value => {\r\n          const {dispatch} = value;\r\n          return (\r\n            <div>\r\n              <div className=\"card mb-3\">\r\n                <div className=\"card-header\">Add Contact</div>\r\n                <div className=\"card-body\">\r\n                  <form action=\"\" onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                    <TextInputGroup \r\n                      label='Name' \r\n                      name='name' \r\n                      value={name}\r\n                      placeholder='Enter name...' \r\n                      onChange={this.onChange}\r\n                      error={errors.name}\r\n                    />\r\n                    <TextInputGroup \r\n                      label='Email' \r\n                      name='email' \r\n                      value={email}\r\n                      type='email'\r\n                      placeholder='Enter email...' \r\n                      onChange={this.onChange}\r\n                      error={errors.email}\r\n                    />\r\n                    <TextInputGroup \r\n                      label='Phone' \r\n                      name='phone' \r\n                      value={phone}\r\n                      placeholder='Enter phone...' \r\n                      onChange={this.onChange}\r\n                      error={errors.phone}\r\n                    />\r\n                    <input type=\"submit\" value=\"Add Contact\" className=\"btn btn-light btn-block\"/>   \r\n                  </form>\r\n                </div>\r\n                </div>\r\n            </div>\r\n          )\r\n        }}\r\n      </Consumer>\r\n    )\r\n   \r\n  }\r\n}\r\n\r\nexport default  AddContact","import React, { Component } from 'react'\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\nclass EditContact extends Component {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    errors: {}\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n\r\n    const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n\r\n    const contact = res.data;\r\n\r\n    this.setState({\r\n      name: contact.name,\r\n      email: contact.email,\r\n      phone: contact.phone\r\n    });\r\n  }\r\n\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n\r\n    const { name, email, phone } = this.state;\r\n\r\n    // Check for Errors   \r\n    if (name === '') {\r\n      this.setState({\r\n        errors: {\r\n          name: 'Name is required'\r\n        }\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (email === '') {\r\n      this.setState({\r\n        errors: {\r\n          phone: 'Email is required'\r\n        }\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (phone === '') {\r\n      this.setState({\r\n        errors: {\r\n          phone: 'Phone is required'\r\n        }\r\n      });\r\n      return;\r\n    }\r\n\r\n    const { id } = this.props.match.params;\r\n\r\n    const updateContact = {\r\n      name, \r\n      email, \r\n      phone\r\n    };\r\n\r\n    const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updateContact);\r\n\r\n    dispatch({type: 'UPDATE_CONTACT', payload: res.data});\r\n\r\n\r\n\r\n    // Clear State\r\n    this.setState({\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      errors: {}\r\n    });\r\n\r\n    // Redirect after submiting form\r\n    this.props.history.push('/');\r\n  }\r\n\r\n  onChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div>\r\n              <div className=\"card mb-3\">\r\n                <div className=\"card-header\">Edit Contact</div>\r\n                <div className=\"card-body\">\r\n                  <form action=\"\" onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                    <TextInputGroup\r\n                      label='Name'\r\n                      name='name'\r\n                      value={name}\r\n                      placeholder='Enter name...'\r\n                      onChange={this.onChange}\r\n                      error={errors.name}\r\n                    />\r\n                    <TextInputGroup\r\n                      label='Email'\r\n                      name='email'\r\n                      value={email}\r\n                      type='email'\r\n                      placeholder='Enter email...'\r\n                      onChange={this.onChange}\r\n                      error={errors.email}\r\n                    />\r\n                    <TextInputGroup\r\n                      label='Phone'\r\n                      name='phone'\r\n                      value={phone}\r\n                      placeholder='Enter phone...'\r\n                      onChange={this.onChange}\r\n                      error={errors.phone}\r\n                    />\r\n                    <input type=\"submit\" value=\"Update Contact\" className=\"btn btn-light btn-block\" />\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )\r\n        }}\r\n      </Consumer>\r\n    )\r\n\r\n  }\r\n}\r\n\r\nexport default EditContact","import React from 'react'\r\n\r\nexport default function NotFound() {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\"><span className=\"text-danger\">404 Page Not Found</span></h1>\r\n      <p className=\"lead\">Sorry, that page does not exist</p>\r\n    </div>\r\n \r\n  );\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nclass Test extends Component {\r\n  state = {\r\n    name: '',\r\n    username:'',\r\n    email: '',\r\n    phone:'',\r\n    address:{},\r\n    company:{}\r\n  };\r\n\r\n  \r\n  // UNSAFE_componentWillMount() {\r\n  //   console.log(\"Component will mount!\");\r\n  // }\r\n  \r\n  componentDidMount() {\r\n    fetch('https://jsonplaceholder.typicode.com/users/1')\r\n    .then(response => response.json())\r\n    .then(data => this.setState({\r\n      name: data.name,\r\n      username: data.username,\r\n      email: data.email,\r\n      address: data.address,\r\n      company: data.company\r\n    }));\r\n  }\r\n\r\n \r\n  render() {\r\n    const {name, username, email,phone, company} = this.state;\r\n    const{street, suite,city,zipcode} = this.state.address;\r\n    return (\r\n      <div>\r\n        <h4>name: {name}</h4>\r\n        <ul>\r\n          <li>username: {username}</li>\r\n          <li>email: {email}, phone:{phone}</li>\r\n          <li>address:</li>\r\n          <ul>\r\n            <li>street: {street}</li>\r\n            <li>suite: {suite}</li>\r\n            <li>city: {city}</li>\r\n            <li>postcode: {zipcode}</li>\r\n          </ul>\r\n          \r\n          <li>company: {company.name}</li>\r\n        </ul>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default  Test;","import React from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom'\nimport Contacts from './components/contacts/Contacts';\nimport Header from './components/layout/Header';\nimport About from './components/pages/About';\nimport { Provider } from './context';\n\nimport './App.css';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport NotFound from './components/pages/NotFound';\nimport Test from './components/test/Test';\n\n\nfunction App() {\n  return (\n    <Provider>\n      <Router>\n        <div className=\"App\">\n          <Header\n            branding=\"Contact Manger\" />\n          <div className=\"container\">\n            <Switch>\n              <Route exact path='/' component={ Contacts }/>\n              <Route exact path='/about' component={ About }/>\n              <Route exact path='/contact/add' component={ AddContact }/>\n              <Route exact path='/contact/edit/:id' component={ EditContact} />\n              <Route exact path='/test' component={ Test } />\n              <Route component={ NotFound } />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </Provider>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}